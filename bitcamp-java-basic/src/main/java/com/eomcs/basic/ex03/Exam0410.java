package com.eomcs.basic.ex03;

public class Exam0410 {
  public static void main(String[] args) {
    // 자바는 문자를 메모리에 저장할 때 Unicode 규칙에 따라
    // 2바이트 코드로 저장한다.
    
    // => 'A' : 0x0041
    
    // println()
    // 출력값으로 문자 코드가 주어지면 해당 코드의 문자를 폰트 파일에서 찾아 출력
    // 만약 폰트 파일에 해당 코드의 문자가 없으면 출력하지 못한다.
    
    System.out.println('A');
    System.out.println('가');
    
    System.out.println('\u4eba');
    System.out.println('\u0041');
    System.out.println('\uac00');
    
    // 문자 집합 문자를 2진수로 바꾸는 규칙
    // 1) ASCII(7비트 -> 128자)
    // - 영어 대소문자, 숫자, 특수문자 등
    // - 'A' => 100_0001 = 0x41 = 65
    // - 'B' => 100_0010 = 0x42 = 66
    // - 한글(11172자)은 정의되어 있지 않다. 
    // 2) ISO-8859-1(8비트 -> 256자)
    // - ASCII 문자 + 유럽 문자
    // 3) EUC-KR(16비트 약 6만 자, KSC-5601)
    // - 2350자에 대한 규칙
    // - '가' => 10110000_10100001 = 0xb0a1
    // - '각' => 10110000_10100010 = 0xb0a2
    // 현대 통용되는 한글 음절 11172자를 모두 표현할 수 없다.
    // 4) Unicode(16비트, ISO 10646)
    // - 영어 한글 모두 2바이트로 표현
    // - 일반적으로 통용되는 대부분의 국가의 문자를 담고 있다.
    // - 'A' => 0x0041
    // - 'B' => 0x0042
    // - '가' => 0xac00
    // - '나' => 0xac01
    // - 영어를 2바이트로 표현하므로 비효율적
    // - 한글을 새로 정의했기 때문에 EUC-KR과 호환되지 않는다.
    // 5) UTF-8(1~4바이트)
    // - Unicode에 있는 문자를 규칙에 따라 1~4바이트로 표현한다.
    // - ISO-8859-1(영어, 숫자, 특수 문자) : 1바이트
    // - 한글: 3바이트
    // 문자에 따라 바이트 크기가 다르다.
    // 
    // 폰트
    // 1) Raster 폰트(bitcamp 폰트)
    // - 크기를 늘리면 계단 현상 발생
    // - 폰트를 도트(점) 정보로 저장한다.
    // - 출력속도가 빠르다.
    // - 단순한 그림이나 복잡한 그림이 파일 크기가 작다.
    // 
    // 2) Vector 폰트(truetype 폰트)
    // - 크기를 늘려도 깔끔하게 출력
    // - 폰트를 명령어 저장한다.
    // 그릴 때 마다 명령어를 실행해야하기 때문에 출력 속도가 느리다.
    // 그림이 복잡할수록 명령어가 복잡하기 떄문에 파일크기가 커진다.
    
   
  }

}
